apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.oss.licenses.plugin'
apply plugin: 'com.getkeepsafe.dexcount'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def fabricPropertiesFile = rootProject.file("fabric.properties")
def fabricProperties = new Properties()
fabricProperties.load(new FileInputStream(fabricPropertiesFile))

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId 'ua.sergeimunovarov.tcalc'
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 27
        versionName '4.3.1'

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner' 
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    testOptions {
        animationsDisabled true // Works with API 24+ ?
    }

    dataBinding {
        enabled true
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false

            buildConfigField "boolean", "SHOULD_CLEAR_PREFS_ON_START", "false"
        }

        candidate {
            initWith(release)
            signingConfig signingConfigs.release
            minifyEnabled false
            debuggable true
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {

        beta {
            manifestPlaceholders << [FABRIC_API_KEY : fabricProperties['apiKey']]

            versionNameSuffix '-beta'
        }

        stable {
            ext.enableCrashlytics = false
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        def buildType = variant.buildType.name
        if (names.contains("beta") && buildType != 'release') {
            variant.ignore = true
        }
    }

//    testBuildType 'candidate'

    gradle.taskGraph.useFilter { task ->
        if (task.name.endsWith('UnitTest') && (task.name.contains('Candidate') || task.name.contains('Release'))) {
            return false
        }
        return true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize '4g'
        preDexLibraries true
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

ext {
    supportVersion = '27.0.2'
    daggerVersion = '2.12'
    autoValueVersion = '1.5.3'

    leakCanaryVersion = '1.5.4'

    assertjVersion = '2.9.0'
    mockitoVersion = '2.13.0'
    espressoVersion = '3.0.1'
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$supportVersion"
    resolutionStrategy.force "com.android.support:support-compat:$supportVersion"
    resolutionStrategy.force "com.android.support:support-v4:$supportVersion"
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"

    testImplementation "android.arch.core:core-testing:1.1.0"
    testImplementation "android.arch.persistence.room:testing:1.1.0-alpha2"

    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation "org.assertj:assertj-core:$assertjVersion"
    androidTestImplementation 'com.github.fabioCollini:DaggerMock:0.8.4'
    androidTestImplementation 'com.bartoszlipinski:cortado:1.2.0'

    betaImplementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true;
    }

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    androidTestImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    implementation 'com.google.android.gms:play-services-oss-licenses:11.8.0'

    implementation "com.android.support:support-annotations:$supportVersion"
    implementation "com.android.support:support-core-utils:$supportVersion"
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:recyclerview-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"

    implementation "android.arch.lifecycle:extensions:1.1.0"
    implementation "android.arch.lifecycle:common-java8:1.1.0"

    implementation "android.arch.persistence.room:runtime:1.1.0-alpha2"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.0-alpha2"

    implementation "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    compileOnly 'javax.annotation:jsr250-api:1.0'

    compileOnly "com.google.auto.value:auto-value:$autoValueVersion"
    annotationProcessor "com.google.auto.value:auto-value:$autoValueVersion"
    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.6'
}

apply from: '../tools/checkstyle.gradle'
